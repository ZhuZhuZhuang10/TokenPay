@{
    ViewData["Title"] = "Страница оплаты";
    var Now = DateTime.Now.ToUniversalTime();
    var ExpireTime = ViewData.ContainsKey("ExpireTime") ? Convert.ToDateTime(ViewData["ExpireTime"]).ToUniversalTime() : Now;
}
@using TokenPay.Domains;
@using TokenPay.Extensions
@using TokenPay.Models.EthModel;
@model TokenPay.Domains.TokenOrders
@inject List<EVMChain> chain

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>@ViewData["Title"] - TokenPay</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- FontAwesome for Icons -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <!-- Custom CSS -->
    <style>
        body {
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: #343a40;
        }
        .payment-container {
            max-width: 800px;
            margin: 50px auto;
            background: #ffffff;
            border-radius: 15px;
            box-shadow: 0 8px 16px rgba(0,0,0,0.1);
            padding: 30px;
        }
        .header-section {
            text-align: center;
            margin-bottom: 30px;
        }
        .header-section h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            color: #007bff;
        }
        .header-section p {
            font-size: 1.1rem;
            color: #6c757d;
        }
        .payment-details {
            margin-bottom: 30px;
        }
        .payment-details h3 {
            font-size: 1.75rem;
            margin-bottom: 20px;
            color: #17a2b8;
        }
        .address-section {
            margin-bottom: 30px;
        }
        .address-section h4 {
            font-size: 1.25rem;
            margin-bottom: 15px;
            color: #28a745;
        }
        .copy-btn {
            margin-left: 10px;
        }
        .qr-code-section {
            text-align: center;
            margin-bottom: 30px;
        }
        .qr-code-section img {
            max-width: 200px;
            border: 2px solid #dee2e6;
            border-radius: 10px;
            padding: 10px;
            background-color: #f8f9fa;
        }
        .info-alert {
            background-color: #fff3cd;
            border-color: #ffeeba;
            color: #856404;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 30px;
        }
        .countdown-timer {
            font-size: 1.25rem;
            font-weight: bold;
            color: #dc3545;
            margin-bottom: 20px;
        }
        .exchange-links {
            margin-top: 20px;
        }
        .exchange-links h5 {
            margin-bottom: 15px;
            color: #6f42c1;
        }
        .exchange-links ul {
            list-style: none;
            padding: 0;
        }
        .exchange-links li {
            margin-bottom: 10px;
        }
        .exchange-links a {
            color: #007bff;
            text-decoration: none;
        }
        .exchange-links a:hover {
            text-decoration: underline;
        }
        .footer-section {
            text-align: center;
            margin-top: 30px;
            color: #6c757d;
        }
        .btn-custom {
            background-color: #17a2b8;
            color: #ffffff;
            border: none;
        }
        .btn-custom:hover {
            background-color: #138496;
            color: #ffffff;
        }
        .alert-icon {
            margin-right: 10px;
        }
        .spinner-border {
            width: 1.5rem;
            height: 1.5rem;
            border-width: 0.2em;
        }
        @media (max-width: 576px) {
            .payment-container {
                padding: 20px;
            }
            .header-section h1 {
                font-size: 2rem;
            }
            .payment-details h3, .address-section h4, .exchange-links h5 {
                font-size: 1.5rem;
            }
            .countdown-timer {
                font-size: 1rem;
            }
        }
    </style>
</head>
<body>
    <div class="payment-container">
        @if (Model == null)
        {
            <div class="row align-items-center h-100">
                <div class="text-center w-100">
                    <h1 class="display-4 text-danger">Заказ не существует!</h1>
                    <p class="lead">Пожалуйста, проверьте детали заказа или обратитесь в поддержку.</p>
                </div>
            </div>
        }
        else
        {
            <div class="header-section">
                <h1>Оплата заказа</h1>
                <p>Пожалуйста, выполните оплату, используя следующие детали.</p>
            </div>

            <div class="payment-details">
                <h3>Детали платежа</h3>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="currency" class="form-label"><i class="fas fa-money-bill-wave"></i> Валюта</label>
                        <input type="text" class="form-control" id="currency" value="@Model.Currency.ToCurrency(chain)" readonly>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="blockchain" class="form-label"><i class="fas fa-link"></i> Блокчейн</label>
                        <input type="text" class="form-control" id="blockchain" value="@Model.Currency.ToBlockchainEnglishName(chain)" readonly>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 mb-3">
                        <label for="amount" class="form-label"><i class="fas fa-wallet"></i> Сумма к оплате</label>
                        <div class="input-group">
                            <input type="text" class="form-control" id="amount" value="@Model.Amount @Model.Currency.ToCurrency(chain)" readonly>
                            <button class="btn btn-custom copy-btn" data-clipboard-text="@Model.Amount"><i class="fas fa-copy"></i> Копировать</button>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 mb-3">
                        <label for="orderNumber" class="form-label"><i class="fas fa-receipt"></i> Номер заказа</label>
                        <input type="text" class="form-control" id="orderNumber" value="@Model.OutOrderId" readonly>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 mb-3">
                        <label for="expireTime" class="form-label"><i class="fas fa-hourglass-end"></i> Истечение срока</label>
                        <input type="text" class="form-control" id="expireTime" value="@ExpireTime.ToString("yyyy-MM-dd HH:mm:ss 'GMT'zzz")" readonly>
                    </div>
                </div>
            </div>

            <div class="address-section">
                <h4>Адрес для оплаты</h4>
                <div class="input-group">
                    <input type="text" class="form-control" id="paymentAddress" value="@Model.ToAddress" readonly style="@((Model.ToAddress.StartsWith("T")) ? "font-size:14px;" : "font-size:12px;")">
                    <button class="btn btn-custom copy-btn" data-clipboard-target="#paymentAddress"><i class="fas fa-copy"></i> Копировать</button>
                </div>
            </div>

            <div class="qr-code-section">
                <img src="data:image/png;base64,@ViewData["QrCode"]" alt="QR Код адреса для оплаты">
                <p class="mt-2">Отсканируйте QR-код для быстрого доступа к адресу оплаты.</p>
            </div>

            <div class="info-alert d-flex align-items-center">
                <i class="fas fa-exclamation-triangle alert-icon"></i>
                <div>
                    <strong>Важно:</strong> Пожалуйста, внимательно проверьте блокчейн и валюту, чтобы избежать потери активов или сбоя платежа!
                </div>
            </div>

            <div class="countdown-timer">
                Осталось времени: <span id="day_show"></span> <span id="hour_show"></span> <span id="minute_show"></span> <span id="second_show"></span>
            </div>

            <div class="exchange-links">
                <h5>Где можно купить валюту блокчейна:</h5>
                <ul>
                    <li>1. Купить <span class="text-danger">@Model.Currency.ToCurrency(chain)</span> на <a href="https://www.okx.com/buy-crypto#sourceBase=@Model.Currency.ToCurrency(chain)" target="_blank"><i class="fab fa-cc-visa"></i> OKX</a></li>
                    <li>2. Купить <span class="text-danger">@Model.Currency.ToCurrency(chain)</span> на <a href="https://p2p.binance.com/express/buy/@Model.Currency.ToCurrency(chain)" target="_blank"><i class="fab fa-bitcoin"></i> Binance</a></li>
                    <li>3. Купить <span class="text-danger">@Model.Currency.ToCurrency(chain)</span> на <a href="https://www.coinbase.com/buy/@Model.Currency.ToCurrency(chain)" target="_blank"><i class="fab fa-coinbase"></i> Coinbase</a></li>
                    <li>4. Купить <span class="text-danger">@Model.Currency.ToCurrency(chain)</span> на <a href="https://www.kraken.com/buy/@Model.Currency.ToCurrency(chain)" target="_blank"><i class="fab fa-kraken"></i> Kraken</a></li>
                </ul>
            </div>

            <div class="footer-section">
                <p>&copy; @DateTime.Now.Year TokenPay. Все права защищены.</p>
                <p>Если у вас возникли вопросы, пожалуйста, <a href="/support" class="text-primary">свяжитесь с нами</a>.</p>
            </div>
        }
    </div>

    <!-- Bootstrap JS and dependencies (Popper.js) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- jQuery (для работы с Clipboard и AJAX) -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Clipboard.js для копирования -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.11/clipboard.min.js"></script>
    <!-- Custom Scripts -->
    @section Scripts{
    <script>
        $(document).ready(function () {
            // Инициализация Clipboard.js
            var clipboard = new ClipboardJS('.copy-btn');

            clipboard.on('success', function(e) {
                // Показать всплывающее уведомление об успешном копировании
                $(e.trigger).tooltip({
                    title: "Скопировано!",
                    placement: "top",
                    trigger: "manual"
                }).tooltip('show');
                setTimeout(function () {
                    $(e.trigger).tooltip('hide');
                }, 1500);
                e.clearSelection();
            });

            clipboard.on('error', function(e) {
                // Показать всплывающее уведомление об ошибке копирования
                $(e.trigger).tooltip({
                    title: "Ошибка копирования",
                    placement: "top",
                    trigger: "manual"
                }).tooltip('show');
                setTimeout(function () {
                    $(e.trigger).tooltip('hide');
                }, 1500);
            });

            // Таймер обратного отсчета
            function initializeTimer(endTime) {
                function updateTimer() {
                    var now = new Date();
                    var timeDifference = endTime - now;

                    if (timeDifference <= 0) {
                        clearInterval(timerInterval);
                        // Можно добавить логику по истечении времени, например, обновить страницу или показать сообщение
                        location.reload();
                        return;
                    }

                    var days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));
                    var hours = Math.floor((timeDifference / (1000 * 60 * 60)) % 24);
                    var minutes = Math.floor((timeDifference / (1000 * 60)) % 60);
                    var seconds = Math.floor((timeDifference / 1000) % 60);

                    $('#day_show').text(days + " дн. ");
                    $('#hour_show').text(hours + " ч. ");
                    $('#minute_show').text(minutes + " мин. ");
                    $('#second_show').text(seconds + " сек. ");
                }

                // Обновлять таймер каждую секунду
                var timerInterval = setInterval(updateTimer, 1000);
                updateTimer(); // Первоначальный вызов
            }

            // Инициализация таймера с заданным временем истечения
            var endTime = new Date('@ExpireTime.ToUniversalTime().ToString("yyyy/MM/dd HH:mm:ss")');
            initializeTimer(endTime);

            // Функция проверки статуса заказа
            function checkOrderStatus() {
                var redirectUrl = "@(Model?.RedirectUrl)";
                $.ajax({
                    url: "/Check/@(Model?.Id)",
                    method: "GET",
                    success: function(response) {
                        if (response === 'Pending') {
                            console.log('Ожидание оплаты');
                        } else if (response === 'Expired') {
                            clearInterval(orderCheckInterval);
                            console.log('Заказ истек');
                            location.reload();
                        } else if (response === 'Paid') {
                            clearInterval(orderCheckInterval);
                            console.log('Оплата получена');
                            setTimeout(function () {
                                if (redirectUrl) {
                                    window.location.href = redirectUrl;
                                } else {
                                    alert("Оплата успешно получена!");
                                }
                            }, 500);
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Ошибка при проверке статуса заказа:', error);
                    }
                });
            }

            // Установка интервала проверки статуса заказа каждые 5 секунд
            var orderCheckInterval = setInterval(checkOrderStatus, 5000);

            // Инициализация всплывающих подсказок (Bootstrap tooltips)
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
              return new bootstrap.Tooltip(tooltipTriggerEl)
            })
        });
    </script>
    }
</body>
</html>
